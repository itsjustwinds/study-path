/*
 * trie.cpp
 *
 *  Created on: Jul 26, 2019
 *      Author: huy
 */

#include"trie.h"
using namespace std;

void trie::add_word(string S,string file){
	if (!S.size()){
		this->files.push_back(file);
		return;
	}
	char beg=S[0]; int id=this->getid(beg);
	if (id==-1){
		id=this->had.size();
		this->had.push_back(beg);
		trie New=trie();
		this->Next.push_back(New);
	}
	trie New=this->getNode(id);
	S.erase(S.begin());
	New.add_word(S,file);
}

int trie::getid(char s){
	for (int i=0;i<(int)this->had.size();++i)
	if (this->had[i]==s) return i;
	return -1;
}

trie trie::getNode(int id){
	return this->Next[id];
}

vector<string > trie::get_all_files(){
	return this->files;
}

vector<string > trie::get_files_from_word(string S){
	if (!S.size())
		return this->files;
	char beg=S[0];
	int id=this->getid(beg);
	if (id==-1) {
		vector<string > tmp;
		tmp.clear();
		return tmp;
	}
	trie New=this->getNode(id);
	S.erase(S.begin());
	return New.get_files_from_word(S);
}

int trie::check_link(string s){
	for (int i=0;i<(int)this->files.size();++i)
		if (s==this->files[i]) return 1;
	return 0;
}

